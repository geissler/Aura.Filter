<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a7" title="">
  <file path="AbstractRule.php" hash="3602909da03c03e6a2cafe406532888e" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <class final="false" abstract="false" namespace="Aura\Filter" line="20" package="Aura\Filter">
      <extends/>
      <implements>\Aura\Filter\RuleInterface</implements>
      <name>AbstractRule</name>
      <full_name>\Aura\Filter\AbstractRule</full_name>
      <docblock line="13">
        <description><![CDATA[Abstract Rule]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Filter"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="Aura\Filter" package="Default">
        <name>$data</name>
        <default><![CDATA[]]></default>
        <docblock line="22">
          <description><![CDATA[The full set of data to be filtered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="Aura\Filter" package="Default">
        <name>$field</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[The field to be filtered within the data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Aura\Filter" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => '', 'failure_is_not' => '', 'failure_is_blank_or' => '', 'failure_fix' => '', 'failure_fix_blank_or' => '')]]></default>
        <docblock line="40">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="Aura\Filter" package="Default">
        <name>$message_key</name>
        <default><![CDATA['failure_is']]></default>
        <docblock line="55">
          <description><![CDATA[The message key to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="Aura\Filter" package="Default">
        <name>$params</name>
        <default><![CDATA[array()]]></default>
        <docblock line="64">
          <description><![CDATA[Params passed into the filter for validate/sanitize; generally used by
the message.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="85" package="Aura\Filter">
        <name>prep</name>
        <full_name>prep</full_name>
        <docblock line="74">
          <description><![CDATA[Prepare the rule for reuse.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="param" description="The full set of data to be filtered." type="object" variable="$data">
            <type by_reference="false">object</type>
          </tag>
          <tag line="74" name="param" description="The field to be filtered within the data." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="99" package="Aura\Filter">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="91">
          <description><![CDATA[Get the error message; note that this returns the message whether or
not there was an error when validating or sanitizing.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="111" package="Aura\Filter">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="104">
          <description><![CDATA[Gets the params passed into the filter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter" line="125" package="Aura\Filter">
        <name>setParams</name>
        <full_name>setParams</full_name>
        <docblock line="116">
          <description><![CDATA[Sets the params passed into the filter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="param" description="The params passed into the filter." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter" line="139" package="Aura\Filter">
        <name>setMessageKey</name>
        <full_name>setMessageKey</full_name>
        <docblock line="130">
          <description><![CDATA[Sets the message key to be used.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="param" description="The message key to be used." type="string" variable="$message_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$message_key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="152" package="Aura\Filter">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="144">
          <description><![CDATA[Get the value of the field being filtered, or null if the field is
not set in the data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="171" package="Aura\Filter">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="162">
          <description><![CDATA[Set value of field, creating it in the data if needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="param" description="The new value of the field." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="184" package="Aura\Filter">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="177">
          <description><![CDATA[Is the value valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="177" name="return" description="True if valid, false if not valid." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="197" package="Aura\Filter">
        <name>isNot</name>
        <full_name>isNot</full_name>
        <docblock line="190">
          <description><![CDATA[Is the value *not* valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="True if not valid, false if valid." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="210" package="Aura\Filter">
        <name>isBlankOr</name>
        <full_name>isBlankOr</full_name>
        <docblock line="203">
          <description><![CDATA[Is the value blank, or otherwise valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="return" description="True if blank or valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="227" package="Aura\Filter">
        <name>fix</name>
        <full_name>fix</full_name>
        <docblock line="220">
          <description><![CDATA[Sanitize the value, transforming it as needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="220" name="return" description="True if the value was sanitized, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="242" package="Aura\Filter">
        <name>fixBlankOr</name>
        <full_name>fixBlankOr</full_name>
        <docblock line="233">
          <description><![CDATA[If the value is blank, set to null; sanitize if not blank, transforming
it as needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="233" name="return" description="True if the value was set to null or sanitized, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter" line="265" package="Aura\Filter">
        <name>isBlank</name>
        <full_name>isBlank</full_name>
        <docblock line="254">
          <description><![CDATA[Is the value blank?]]></description>
          <long-description><![CDATA[<p>Blank is null, empty string, or a string of only whitespace. Non-null
non-string values are not blank; e.g., integer zero, float zero, an
empty array, boolean false, etc. are not blank.</p>]]></long-description>
          <tag line="254" name="return" description="True if blank, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Exception/RuleNotMapped.php" hash="ab6bf13771204dc086e495f9d98654c8" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="Exception">Aura\Filter\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Exception" line="22" package="Aura\Filter">
      <extends>\Aura\Filter\Exception</extends>
      <name>RuleNotMapped</name>
      <full_name>\Aura\Filter\Exception\RuleNotMapped</full_name>
      <docblock line="15">
        <description><![CDATA[Rule not mapped exception.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
      </docblock>
    </class>
  </file>
  <file path="Exception.php" hash="c1d66f124034aab6c2f9b55843cc119a" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <class final="false" abstract="false" namespace="Aura\Filter" line="20" package="Aura\Filter">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Aura\Filter\Exception</full_name>
      <docblock line="13">
        <description><![CDATA[Generic package exception.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Filter"/>
      </docblock>
    </class>
  </file>
  <file path="Rule/All.php" hash="009366abac6fc69ded9885fc287bcc56" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <namespace-alias name="RuleLocator">Aura\Filter\RuleLocator</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>All</name>
      <full_name>\Aura\Filter\Rule\All</full_name>
      <docblock line="16">
        <description><![CDATA[A "meta-rule" indicating that the value must pass all of a series of rules.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="16" name="package" description="Aura.Filter"/>
        <tag line="16" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$rule_locator</name>
        <default><![CDATA[]]></default>
        <docblock line="27">
          <description><![CDATA[A rule locator for rules used by this rule.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="param" description="RuleLocator" type="" variable=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_ALL', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_ALL', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_ALL', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_ALL', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_ALL')]]></default>
        <docblock line="36">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="61" package="Aura\Filter">
        <name>setRuleLocator</name>
        <full_name>setRuleLocator</full_name>
        <docblock line="51">
          <description><![CDATA[Sets the rule locator; this should be an new instance, not a shared
service.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="The rule locator." type="\Aura\Filter\RuleLocator" variable="$rule_locator">
            <type by_reference="false">\Aura\Filter\RuleLocator</type>
          </tag>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$rule_locator</name>
          <default><![CDATA[]]></default>
          <type>Aura\Filter\RuleLocator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="75" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="66">
          <description><![CDATA[Validates that the value passes all of the rules in a list.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="The list of rules that the value must pass." type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$list</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="103" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="96">
          <description><![CDATA[Cannot sanitize to "all" meta-rules.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="return" description="" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Alnum.php" hash="f016ecb72236f211f71689e6d615761c" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Alnum</name>
      <full_name>\Aura\Filter\Rule\Alnum</full_name>
      <docblock line="15">
        <description><![CDATA[Rule for alphanumeric characters.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_ALNUM', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_ALNUM', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_ALNUM', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_ALNUM', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_ALNUM')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is only letters (upper/lower case) and digits.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="64" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="57">
          <description><![CDATA[Strips non-alphanumeric characters from the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Alpha.php" hash="4f7441b204fa25721f60cee976a63729" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Alpha</name>
      <full_name>\Aura\Filter\Rule\Alpha</full_name>
      <docblock line="15">
        <description><![CDATA[Rule for alphabetic characters.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_ALPHA', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_ALPHA', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_ALPHA', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_ALPHA', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_ALPHA')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is letters only (upper or lower case).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="64" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="57">
          <description><![CDATA[Strips non-alphabetic characters from the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Any.php" hash="3e23ed6f930ed287e9f610870e0e556e" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <namespace-alias name="RuleLocator">Aura\Filter\RuleLocator</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="26" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Any</name>
      <full_name>\Aura\Filter\Rule\Any</full_name>
      <docblock line="16">
        <description><![CDATA[A "meta-rule" indicating that the value must pass at least one of a series
of rules.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="16" name="package" description="Aura.Filter"/>
        <tag line="16" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="Aura\Filter\Rule" package="Default">
        <name>$rule_locator</name>
        <default><![CDATA[]]></default>
        <docblock line="28">
          <description><![CDATA[A rule locator for rules used by this rule.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="28" name="param" description="RuleLocator" type="" variable=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_ANY', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_ANY', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_ANY', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_ANY', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_ANY')]]></default>
        <docblock line="37">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="62" package="Aura\Filter">
        <name>setRuleLocator</name>
        <full_name>setRuleLocator</full_name>
        <docblock line="52">
          <description><![CDATA[Sets the rule locator; this should be an new instance, not a shared
service.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="The rule locator." type="\Aura\Filter\RuleLocator" variable="$rule_locator">
            <type by_reference="false">\Aura\Filter\RuleLocator</type>
          </tag>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$rule_locator</name>
          <default><![CDATA[]]></default>
          <type>Aura\Filter\RuleLocator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="76" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="67">
          <description><![CDATA[Validates that the value passes at least one the rules in a list.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="param" description="The list of rules that the value must pass." type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="67" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$list</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="104" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="97">
          <description><![CDATA[Cannot sanitize to "any" meta-rules.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="return" description="" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Between.php" hash="af3fbca2a3e6c401b5943a0600fdeaea" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Between</name>
      <full_name>\Aura\Filter\Rule\Between</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is within a given range.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_BETWEEN', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_BETWEEN', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_BETWEEN', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_BETWEEN', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_BETWEEN')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="52" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is within a given range.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The minimum valid value." type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="param" description="The maximum valid value." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="77" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="65">
          <description><![CDATA[If the value is < min , will set the min value,
and if value is greater than max, set the max value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="param" description="The minimum valid value." type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="65" name="param" description="The maximum valid value." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="65" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Blank.php" hash="c16cee953290c52da18c1d94959fa499" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Blank</name>
      <full_name>\Aura\Filter\Rule\Blank</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is blank (null, empty string, or string of only
whitespace characters).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_BLANK', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_BLANK', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_BLANK', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_BLANK', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_BLANK')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="54" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Validates that the value is null, or is a string composed only of
whitespace.]]></description>
          <long-description><![CDATA[<p>Non-strings and non-nulls never validate as blank; this includes
integers, floats, numeric zero, boolean true and false, any array with
zero or more elements, and all objects and resources.</p>]]></long-description>
          <tag line="42" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="65" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="59">
          <description><![CDATA[set value to null]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Bool.php" hash="d4df7f6d5e58c114441f19489aa1cf0f" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Bool</name>
      <full_name>\Aura\Filter\Rule\Bool</full_name>
      <docblock line="15">
        <description><![CDATA[Rule for booleans.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_BOOL', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_BOOL', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_BOOL', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_BOOL', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_BOOL')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Aura\Filter\Rule" package="Default">
        <name>$true</name>
        <default><![CDATA[array('1', 'on', 'true', 't', 'yes', 'y')]]></default>
        <docblock line="41">
          <description><![CDATA[Pseudo-true representations.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="Aura\Filter\Rule" package="Default">
        <name>$false</name>
        <default><![CDATA[array('0', 'off', 'false', 'f', 'no', 'n')]]></default>
        <docblock line="50">
          <description><![CDATA[Pseudo-false representations; `null` and empty-string are *not* included.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="66" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="59">
          <description><![CDATA[Validates that the value is a boolean representation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="98" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="89">
          <description><![CDATA[Forces the value to a boolean.]]></description>
          <long-description><![CDATA[<p>Note that this recognizes $this->true and $this->false values.</p>]]></long-description>
          <tag line="89" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Closure.php" hash="3a7a78b32b248366a43f7f8090942a7c" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <namespace-alias name="PhpClosure">Closure</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Closure</name>
      <full_name>\Aura\Filter\Rule\Closure</full_name>
      <docblock line="16">
        <description><![CDATA[Rule to apply a closure to the data.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="16" name="package" description="Aura.Filter"/>
        <tag line="16" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_CLOSURE', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_CLOSURE', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_CLOSURE', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_CLOSURE', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_CLOSURE')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Validates the value against a closure.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="A PHP closure." type="\Closure" variable="$closure">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="42" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$closure</name>
          <default><![CDATA[]]></default>
          <type>Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="66" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="57">
          <description><![CDATA[Sanitizes a value using a closure.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="param" description="A PHP closure." type="\Closure" variable="$closure">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="57" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$closure</name>
          <default><![CDATA[]]></default>
          <type>Closure</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/CreditCard.php" hash="9b34608b5f59cef9d98e333f35f75046" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>CreditCard</name>
      <full_name>\Aura\Filter\Rule\CreditCard</full_name>
      <docblock line="15">
        <description><![CDATA[Validates the value as a credit card number.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_CREDIT_CARD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_CREDIT_CARD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_CREDIT_CARD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_CREDIT_CARD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_CREDIT_CARD')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates the value as a credit card number.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="80" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="73">
          <description><![CDATA[Can't fix credit card numbers.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="return" description="" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/DateTime.php" hash="1ada85996f10379d304bc4054af76317" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <namespace-alias name="PhpDateTime">DateTime</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>DateTime</name>
      <full_name>\Aura\Filter\Rule\DateTime</full_name>
      <docblock line="16">
        <description><![CDATA[Validate and Sanitize date time]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="16" name="package" description="Aura.Filter"/>
        <tag line="16" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_DATE_TIME', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_DATE_TIME', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_DATE_TIME', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_DATE_TIME', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_DATE_TIME')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[validate datetime of default format Y-m-d H:i:s]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$format</name>
          <default><![CDATA['Y-m-d H:i:s']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="66" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="59">
          <description><![CDATA[sanitize datetime to default format Y-m-d H:i:s]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="param" description="" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$format</name>
          <default><![CDATA['Y-m-d H:i:s']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter\Rule" line="89" package="Aura\Filter">
        <name>newDateTime</name>
        <full_name>newDateTime</full_name>
        <docblock line="78">
          <description><![CDATA[Returns a new DateTime object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="The incomine date/time value." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="78" name="return" description="If the value is alerady a DateTime then it is returned as-is; if the value is invalid as a date/time then `false` is returned; otherwise, a new DateTime is constructed from the value and returned." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Email.php" hash="b4ba0f5e71bc56c685a4297a8322002f" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Email</name>
      <full_name>\Aura\Filter\Rule\Email</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is an email address.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_EMAIL', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_EMAIL', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_EMAIL', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_EMAIL', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_EMAIL')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Aura\Filter\Rule" package="Default">
        <name>$expr</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[The email validation regex.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="57" package="Aura\Filter">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description><![CDATA[Post-construction tasks to complete object construction.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="94" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="85">
          <description><![CDATA[Validates that the value is an email address.]]></description>
          <long-description><![CDATA[<p>Taken directly from <a href="http://www.iamcal.com/publish/articles/php/parsing_email/">http://www.iamcal.com/publish/articles/php/parsing_email/</a>.</p>]]></long-description>
          <tag line="85" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="105" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="99">
          <description><![CDATA[can't fix emails]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/EqualToField.php" hash="8c8b26494280999902c47265839d3fc1" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>EqualToField</name>
      <full_name>\Aura\Filter\Rule\EqualToField</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that this value is equal to some other element in the filter
chain (note that equality is not strict, so type does not matter).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_EQUAL_TO_FIELD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_EQUAL_TO_FIELD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_EQUAL_TO_FIELD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_EQUAL_TO_FIELD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_EQUAL_TO_FIELD')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="58" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Validates that this value is equal to some other element in the filter
chain (note that equality is *not* strict, so type does not matter).]]></description>
          <long-description><![CDATA[<p>If the other element does not exist in $this->data, or is null, the
validation will fail.</p>]]></long-description>
          <tag line="42" name="param" description="Check against the value of this element in $this-&gt;data." type="string" variable="$other_field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="True if the values are equal, false if not equal." type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="42" name="return" description="True if the values are equal, false if not equal." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$other_field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="77" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="70">
          <description><![CDATA[force the field to the value of the other field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="param" description="" type="string" variable="$other_field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$other_field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/EqualToValue.php" hash="59ba31c4222d7fef51ac8b7b16f9405c" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>EqualToValue</name>
      <full_name>\Aura\Filter\Rule\EqualToValue</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that this value is equal to some other element in the filter
chain (note that equality is not strict, so type does not matter).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_EQUAL_TO_VALUE', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_EQUAL_TO_VALUE', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_EQUAL_TO_VALUE', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_EQUAL_TO_VALUE', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_EQUAL_TO_VALUE')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="50" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[check whether the value is equal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="" type="mixed" variable="$other_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="42" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$other_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="64" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="56">
          <description><![CDATA[force the field to the value of the other field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="" type="mixed" variable="$other_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="56" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$other_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Float.php" hash="1604b7d51462e4d6c63f2b2a4fa2443e" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Float</name>
      <full_name>\Aura\Filter\Rule\Float</full_name>
      <docblock line="15">
        <description><![CDATA[Rule for floats.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_FLOAT', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_FLOAT', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_FLOAT', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_FLOAT', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_FLOAT')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value represents a float.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="73" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[Forces the value to a float.]]></description>
          <long-description><![CDATA[<p>Attempts to extract a valid float from the given value, using an
algorithm somewhat less naive that "remove all characters that are not
'0-9.,eE+-'".  The result may not be expected, but it will be a float.</p>]]></long-description>
          <tag line="60" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="60" name="todo" description="Extract scientific notation from weird strings?"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/InKeys.php" hash="0644d592ae793dbac31fba4abeccf069" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>InKeys</name>
      <full_name>\Aura\Filter\Rule\InKeys</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that the value is a key in the list of allowed options.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_IN_KEYS', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_IN_KEYS', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_IN_KEYS', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_IN_KEYS', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_IN_KEYS')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="54" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is a key in a given array.]]></description>
          <long-description><![CDATA[<p>Given an array (second parameter), the value (first parameter) must
match at least one of the array keys.</p>]]></long-description>
          <tag line="41" name="param" description="An array of key-value pairs; the value must match one of the keys in this array." type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="74" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="67">
          <description><![CDATA[Cannot fix the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Int.php" hash="40f82bccf77dadf880d2bf98e7141a33" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Int</name>
      <full_name>\Aura\Filter\Rule\Int</full_name>
      <docblock line="15">
        <description><![CDATA[Sanitizes a value to an integer.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_INT', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_INT', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_INT', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_INT', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_INT')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value represents an integer.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="71" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[Forces the value to an integer.]]></description>
          <long-description><![CDATA[<p>Attempts to extract a valid integer from the given value, using an
algorithm somewhat less naive that "remove all characters that are not
'0-9+-'".  The result may not be expected, but it will be a integer.</p>]]></long-description>
          <tag line="60" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/InValues.php" hash="35c5a80655a923434839b4349d1380ca" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>InValues</name>
      <full_name>\Aura\Filter\Rule\InValues</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is in a list of allowed values.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_IN_VALUES', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_IN_VALUES', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_IN_VALUES', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_IN_VALUES', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_IN_VALUES')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="54" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is in a given array.]]></description>
          <long-description><![CDATA[<p>Strict checking is enforced, so a string "1" is not the same as
an integer 1.  This helps to avoid matching between 0, false, null,
and empty string.</p>]]></long-description>
          <tag line="41" name="param" description="An array of allowed values." type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="67" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[Cannot fix the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Ipv4.php" hash="4aa125536263f4b747e54931866a7ec2" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Ipv4</name>
      <full_name>\Aura\Filter\Rule\Ipv4</full_name>
      <docblock line="15">
        <description><![CDATA[Sanitizes a value to an IPv4 address.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_IPV4', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_IPV4', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_IPV4', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_IPV4', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_IPV4')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="48" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is a legal IPv4 address.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="70" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="63">
          <description><![CDATA[Forces the value to an IPv4 address.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Locale.php" hash="9d603a9110c98738820bac7996a085ad" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Locale</name>
      <full_name>\Aura\Filter\Rule\Locale</full_name>
      <docblock line="15">
        <description><![CDATA[Rule for locale (language and country) codes.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_LOCALE', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_LOCALE', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_LOCALE', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_LOCALE', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_LOCALE')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Aura\Filter\Rule" package="Default">
        <name>$codes</name>
        <default><![CDATA[array('af_ZA', 'am_ET', 'be_BY', 'bg_BG', 'ca_ES', 'cs_CZ', 'da_DK', 'de_AT', 'de_CH', 'de_DE', 'el_GR', 'en_AU', 'en_CA', 'en_GB', 'en_IE', 'en_NZ', 'en_US', 'es_ES', 'et_EE', 'eu_ES', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'hy_AM', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'kk_KZ', 'ko_KR', 'lt_LT', 'nl_BE', 'nl_NL', 'no_NO', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'sk_SK', 'sl_SI', 'sr_YU', 'sv_SE', 'tr_TR', 'uk_UA', 'zh_CN', 'zh_HK', 'zh_TW')]]></default>
        <docblock line="41">
          <description><![CDATA[Valid locale codes; generated via `locale -a` on Mac OS X 10.7.5.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="66" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="59">
          <description><![CDATA[Validates that the value is in the list of allowed locale codes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="79" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="72">
          <description><![CDATA[Can't fix locale codes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="return" description="Always false." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Max.php" hash="175f38ee393e29f2419c655d2bdfdb40" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Max</name>
      <full_name>\Aura\Filter\Rule\Max</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is less than than or equal to a maximum.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_MAX', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_MAX', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_MAX', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_MAX', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_MAX')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="50" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is less than than or equal to a maximum.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The maximum valid value." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="68" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[Sanitizes to maximum value if values is greater than max]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="The maximum valid value." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="60" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Method.php" hash="88cb3016d13553c616bb2244e42f9bed" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Method</name>
      <full_name>\Aura\Filter\Rule\Method</full_name>
      <docblock line="15">
        <description><![CDATA[Rule to call a method on the value object; the method should return a
boolean to indicate if the filter passed or failed.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_METHOD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_METHOD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_METHOD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_METHOD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_METHOD')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="52" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Calls a method on the value object to validate itself; the method
should return a boolean to indicate if the filter passed or failed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="The method to call on the value object." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="68" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="58">
          <description><![CDATA[Calls a method on the value object to sanitize itself; the method
should return a boolean to indicate if the filter passed or failed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="The method to call on the value object." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter\Rule" line="84" package="Aura\Filter">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="74">
          <description><![CDATA[Calls a method on the value object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="param" description="The arguments to pass to the method call (the first is the method name itself)." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Min.php" hash="2ca89a9fe89564cc008091672e3240c9" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Min</name>
      <full_name>\Aura\Filter\Rule\Min</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is greater than or equal to a minimum.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_MIN', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_MIN', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_MIN', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_MIN', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_MIN')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="50" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is greater than or equal to a minimum.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The minimum valid value." type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="68" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[check whether the value is less than min, if so set to min]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="" type="int" variable="$min">
            <type by_reference="false">int</type>
          </tag>
          <tag line="60" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Regex.php" hash="2187b19c8cee6b53ce406ec1e4748dfe" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Regex</name>
      <full_name>\Aura\Filter\Rule\Regex</full_name>
      <docblock line="15">
        <description><![CDATA[Validates a value using preg_match(), and sanitizes a value to a string
using preg_replace().]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_REGEX', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_REGEX', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_REGEX', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_REGEX', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_REGEX')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="54" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Validates the value against a regular expression.]]></description>
          <long-description><![CDATA[<p>Uses [[php::preg_match() | ]] to compare the value against the given
regular expression.</p>]]></long-description>
          <tag line="42" name="param" description="The regular expression to validate against." type="string" variable="$expr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="True if the value matches the expression, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$expr</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="75" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="64">
          <description><![CDATA[Applies [[php::preg_replace() | ]] to the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="The regular expression pattern to apply." type="string" variable="$expr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="Replace the found pattern with this string." type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$expr</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/StrictEqualToField.php" hash="34f88c02b667dd741cf7bfdac17f3a6d" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>StrictEqualToField</name>
      <full_name>\Aura\Filter\Rule\StrictEqualToField</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that this value is equal to some other element in the filter
chain (note that equality is not strict, so type does not matter).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRICT_EQUAL_TO_FIELD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRICT_EQUAL_TO_FIELD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRICT_EQUAL_TO_FIELD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRICT_EQUAL_TO_FIELD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRICT_EQUAL_TO_FIELD')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="56" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[Validates that this value is equal in value and type to some other
element in the filter chain.]]></description>
          <long-description><![CDATA[<p>If the other element does not exist in $this->data, or is null, the
validation will fail.</p>]]></long-description>
          <tag line="42" name="param" description="Check against the value of this element in $this-&gt;data." type="string" variable="$other_field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="True if the values are equal, false if not equal." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$other_field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="77" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="68">
          <description><![CDATA[Force the field to the value of the other field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="param" description="" type="string" variable="$other_field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$other_field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/StrictEqualToValue.php" hash="937db3b5ab7f89c0f814bedb8fb3cccc" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="25" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>StrictEqualToValue</name>
      <full_name>\Aura\Filter\Rule\StrictEqualToValue</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that this value is equal to some other element in the filter
chain (note that equality is not strict, so type does not matter).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRICT_EQUAL_TO_VALUE', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRICT_EQUAL_TO_VALUE', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRICT_EQUAL_TO_VALUE', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRICT_EQUAL_TO_VALUE', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRICT_EQUAL_TO_VALUE')]]></default>
        <docblock line="27">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="50" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="42">
          <description><![CDATA[check the values strictly on type and value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="" type="string" variable="$other_value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$other_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="64" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="56">
          <description><![CDATA[force the field to the value of the other field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="" type="string" variable="$other_value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$other_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/String.php" hash="9a2b43d4cea1e071595f7863454738f4" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>String</name>
      <full_name>\Aura\Filter\Rule\String</full_name>
      <docblock line="15">
        <description><![CDATA[Forces a value to a string, no encoding or escaping.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRING', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRING', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRING', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRING', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRING')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="53" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value can be represented as a string.]]></description>
          <long-description><![CDATA[<p>Essentially, this means any scalar value is valid (no arrays, objects,
resources, etc).</p>]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="41" name="todo" description="allow for __toString() implementations"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="68" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="58">
          <description><![CDATA[Forces the value to a string, optionally applying str_replace().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="" type="string" variable="$find">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$find</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$replace</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Strlen.php" hash="f5b9c6353b914001d6b158fc00125dcc" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Strlen</name>
      <full_name>\Aura\Filter\Rule\Strlen</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value's length is within a given range.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRLEN', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRLEN', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRLEN', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRLEN', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRLEN')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="50" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the length of the value is within a given range.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The minimum valid length." type="mixed" variable="$len">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$len</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="72" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="60">
          <description><![CDATA[Sanitize to the length given]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="" type="int" variable="$len">
            <type by_reference="false">int</type>
          </tag>
          <tag line="60" name="param" description="" type="int" variable="$pad_string">
            <type by_reference="false">int</type>
          </tag>
          <tag line="60" name="param" description="" type="\Aura\Filter\Rule\constant" variable="$pad_type">
            <type by_reference="false">\Aura\Filter\Rule\constant</type>
          </tag>
          <tag line="60" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$len</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$pad_string</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$pad_type</name>
          <default><![CDATA[STR_PAD_RIGHT]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/StrlenBetween.php" hash="60a4c3367a806498d41a770de1405c7c" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>StrlenBetween</name>
      <full_name>\Aura\Filter\Rule\StrlenBetween</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value's length is within a given range.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRLEN_BETWEEN', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRLEN_BETWEEN', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRLEN_BETWEEN', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRLEN_BETWEEN', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRLEN_BETWEEN')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="52" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the length of the value is within a given range.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The minimum valid length." type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="param" description="The maximum valid length." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="77" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="63">
          <description><![CDATA[Sanitize]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="param" description="" type="int" variable="$min">
            <type by_reference="false">int</type>
          </tag>
          <tag line="63" name="param" description="" type="int" variable="$max">
            <type by_reference="false">int</type>
          </tag>
          <tag line="63" name="param" description="" type="string" variable="$pad_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="" type="\Aura\Filter\Rule\constant" variable="$pad_type">
            <type by_reference="false">\Aura\Filter\Rule\constant</type>
          </tag>
          <tag line="63" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$pad_string</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$pad_type</name>
          <default><![CDATA[STR_PAD_RIGHT]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/StrlenMax.php" hash="1fb3ca4264c627f749f943d1eaf97b36" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>StrlenMax</name>
      <full_name>\Aura\Filter\Rule\StrlenMax</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is no longer than a certain length.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRLEN_MAX', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRLEN_MAX', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRLEN_MAX', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRLEN_MAX', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRLEN_MAX')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that a string is no longer than a certain length.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The value must have no more than this many characters." type="mixed" variable="$max">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="69" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="61">
          <description><![CDATA[If the value is greater than max, set to max value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="" type="int" variable="$max">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$max</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/StrlenMin.php" hash="aec152ae26bc334d91b535716ff7ca41" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>StrlenMin</name>
      <full_name>\Aura\Filter\Rule\StrlenMin</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is no longer than a certain length.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_STRLEN_MIN', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_STRLEN_MIN', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_STRLEN_MIN', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_STRLEN_MIN', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_STRLEN_MIN')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that a string is no longer than a certain length.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="The value must have no more than this many characters." type="mixed" variable="$min">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="73" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="61">
          <description><![CDATA[fix to min length]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="" type="int" variable="$min">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="param" description="" type="string" variable="$pad_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="\Aura\Filter\Rule\constant" variable="$pad_type">
            <type by_reference="false">\Aura\Filter\Rule\constant</type>
          </tag>
          <tag line="61" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$min</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$pad_string</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$pad_type</name>
          <default><![CDATA[STR_PAD_RIGHT]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Trim.php" hash="0c344365988d1dd36fc8f07d7f14c92f" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Trim</name>
      <full_name>\Aura\Filter\Rule\Trim</full_name>
      <docblock line="15">
        <description><![CDATA[Sanitizes a value to a string using trim().]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_TRIM', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_TRIM', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_TRIM', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_TRIM', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_TRIM')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Aura\Filter\Rule" package="Default">
        <name>$chars</name>
        <default><![CDATA[" \t\n\r\0\x0B"]]></default>
        <docblock line="41">
          <description><![CDATA[Same as PHP trim().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="59" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="50">
          <description><![CDATA[Is the value already trimmed?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="" type="string" variable="$chars">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$chars</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="81" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="72">
          <description><![CDATA[Trims characters from the beginning and end of the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="" type="string" variable="$chars">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$chars</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Upload.php" hash="37baddef44ef87a9bc090461755f997d" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Upload</name>
      <full_name>\Aura\Filter\Rule\Upload</full_name>
      <docblock line="15">
        <description><![CDATA[Sanitizes a file-upload information array.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_UPLOAD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_UPLOAD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_UPLOAD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_UPLOAD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_UPLOAD', UPLOAD_ERR_INI_SIZE => 'FILTER_RULE_ERR_UPLOAD_INI_SIZE', UPLOAD_ERR_FORM_SIZE => 'FILTER_RULE_ERR_UPLOAD_FORM_SIZE', UPLOAD_ERR_PARTIAL => 'FILTER_RULE_ERR_UPLOAD_PARTIAL', UPLOAD_ERR_NO_FILE => 'FILTER_RULE_ERR_UPLOAD_NO_FILE', UPLOAD_ERR_NO_TMP_DIR => 'FILTER_RULE_ERR_UPLOAD_NO_TMP_DIR', UPLOAD_ERR_CANT_WRITE => 'FILTER_RULE_ERR_UPLOAD_CANT_WRITE', UPLOAD_ERR_EXTENSION => 'FILTER_RULE_ERR_UPLOAD_EXTENSION', 'err_unknown' => 'FILTER_RULE_ERR_UPLOAD_UNKNOWN', 'err_is_uploaded_file' => 'FILTER_RULE_ERR_UPLOAD_IS_UPLOADED_FILE', 'err_array_keys' => 'FILTER_RULE_ERR_UPLOAD_ARRAY_KEYS')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="62" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="51">
          <description><![CDATA[Validates that the value is an array of file-upload information, and
if a file is referred to, that is actually an uploaded file.]]></description>
          <long-description><![CDATA[<p>The required keys are 'error', 'name', 'size', 'tmp_name', 'type'. More
or fewer or different keys than this will return a "malformed" error.</p>]]></long-description>
          <tag line="51" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="101" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="93">
          <description><![CDATA[Sanitizes a file-upload information array.]]></description>
          <long-description><![CDATA[<p>If no file has been
uploaded, the information will be returned as null.</p>]]></long-description>
          <tag line="93" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter\Rule" line="125" package="Aura\Filter">
        <name>preCheck</name>
        <full_name>preCheck</full_name>
        <docblock line="116">
          <description><![CDATA[check before the file is uploaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter\Rule" line="164" package="Aura\Filter">
        <name>isUploadedFile</name>
        <full_name>isUploadedFile</full_name>
        <docblock line="156">
          <description><![CDATA[check whether the file was uploaded via HTTP POST]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="\Aura\Filter\Rule\type">
            <type by_reference="false">\Aura\Filter\Rule\type</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Rule/Url.php" hash="9d4c2174e51540848c16a5f586aeff49" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Url</name>
      <full_name>\Aura\Filter\Rule\Url</full_name>
      <docblock line="15">
        <description><![CDATA[Validates that a value is a URL.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_URL', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_URL', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_URL', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_URL', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_URL')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates the value as a URL.]]></description>
          <long-description><![CDATA[<p>The value must match a generic URL format; for example,
<code>http://example.com</code>, <code>mms://example.org</code>, and so on.</p>]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="89" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="83">
          <description><![CDATA[cannot fix URLs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Rule/Word.php" hash="2be63529c82fce774974d7edec8e0827" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="AbstractRule">Aura\Filter\AbstractRule</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter\Rule" line="24" package="Aura\Filter">
      <extends>\Aura\Filter\AbstractRule</extends>
      <name>Word</name>
      <full_name>\Aura\Filter\Rule\Word</full_name>
      <docblock line="15">
        <description><![CDATA[Sanitizes a value to a string with only word characters.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Aura\Filter\Rule" package="Default">
        <name>$message_map</name>
        <default><![CDATA[array('failure_is' => 'FILTER_RULE_FAILURE_IS_WORD', 'failure_is_not' => 'FILTER_RULE_FAILURE_IS_NOT_WORD', 'failure_is_blank_or' => 'FILTER_RULE_FAILURE_IS_BLANK_OR_WORD', 'failure_fix' => 'FILTER_RULE_FAILURE_FIX_WORD', 'failure_fix_blank_or' => 'FILTER_RULE_FAILURE_FIX_BLANK_OR_WORD')]]></default>
        <docblock line="26">
          <description><![CDATA[Messages to use when validate or sanitize fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="51" package="Aura\Filter">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="41">
          <description><![CDATA[Validates that the value is composed only of word characters.]]></description>
          <long-description><![CDATA[<p>These include a-z, A-Z, 0-9, and underscore, indicated by a
regular expression "\w".</p>]]></long-description>
          <tag line="41" name="return" description="True if valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter\Rule" line="68" package="Aura\Filter">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="61">
          <description><![CDATA[Strips non-word characters within the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="return" description="True if the value was fixed, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="RuleCollection.php" hash="742f53fd49a53a835033bb69e23f2e15" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="InvalidArgumentException">InvalidArgumentException</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Filter" line="24" package="Aura\Filter">
      <extends/>
      <name>RuleCollection</name>
      <full_name>\Aura\Filter\RuleCollection</full_name>
      <docblock line="15">
        <description><![CDATA[A collection of rules to be applied to a data object.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="15" name="package" description="Aura.Filter"/>
        <tag line="15" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
      </docblock>
      <constant namespace="Aura\Filter" line="29" package="Aura\Filter">
        <name>HARD_RULE</name>
        <full_name>HARD_RULE</full_name>
        <value><![CDATA['HARD_RULE']]></value>
        <docblock line="26">
          <description><![CDATA[Stop filtering on a field when a rule fails.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="34" package="Aura\Filter">
        <name>SOFT_RULE</name>
        <full_name>SOFT_RULE</full_name>
        <value><![CDATA['SOFT_RULE']]></value>
        <docblock line="31">
          <description><![CDATA[Continue filtering on a field when a rule fails.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="39" package="Aura\Filter">
        <name>STOP_RULE</name>
        <full_name>STOP_RULE</full_name>
        <value><![CDATA['STOP_RULE']]></value>
        <docblock line="36">
          <description><![CDATA[Stop filtering on all fields when a rule fails.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="44" package="Aura\Filter">
        <name>IS</name>
        <full_name>IS</full_name>
        <value><![CDATA['is']]></value>
        <docblock line="41">
          <description><![CDATA[Apply a rule to check if the value is valid.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="49" package="Aura\Filter">
        <name>IS_NOT</name>
        <full_name>IS_NOT</full_name>
        <value><![CDATA['isNot']]></value>
        <docblock line="46">
          <description><![CDATA[Apply a rule to check if the value **is not** valid.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="54" package="Aura\Filter">
        <name>IS_BLANK_OR</name>
        <full_name>IS_BLANK_OR</full_name>
        <value><![CDATA['isBlankOr']]></value>
        <docblock line="51">
          <description><![CDATA[Apply a rule to check if the value is blank **or** is valid.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="59" package="Aura\Filter">
        <name>FIX</name>
        <full_name>FIX</full_name>
        <value><![CDATA['fix']]></value>
        <docblock line="56">
          <description><![CDATA[Sanitize the value according to the rule.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="Aura\Filter" line="64" package="Aura\Filter">
        <name>FIX_BLANK_OR</name>
        <full_name>FIX_BLANK_OR</full_name>
        <value><![CDATA['fixBlankOr']]></value>
        <docblock line="61">
          <description><![CDATA[Sanitize the value to `null` if blank, or according to the rule if not.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="73" namespace="Aura\Filter" package="Default">
        <name>$rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="66">
          <description><![CDATA[The rules to be applied to a data object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="Aura\Filter" package="Default">
        <name>$messages</name>
        <default><![CDATA[array()]]></default>
        <docblock line="75">
          <description><![CDATA[Messages from failed rules.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="91" namespace="Aura\Filter" package="Default">
        <name>$hardrule</name>
        <default><![CDATA[array()]]></default>
        <docblock line="84">
          <description><![CDATA[Fields that have failed on a hard rule.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="100" namespace="Aura\Filter" package="Default">
        <name>$field_messages</name>
        <default><![CDATA[array()]]></default>
        <docblock line="93">
          <description><![CDATA[Alternative messages to use when a field fails its filters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="109" namespace="Aura\Filter" package="Default">
        <name>$rule_locator</name>
        <default><![CDATA[]]></default>
        <docblock line="102">
          <description><![CDATA[A RuleLocator object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="\Aura\Filter\RuleLocator">
            <type by_reference="false">\Aura\Filter\RuleLocator</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="118" namespace="Aura\Filter" package="Default">
        <name>$translator</name>
        <default><![CDATA[]]></default>
        <docblock line="111">
          <description><![CDATA[A Translator object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="var" description="" type="\Aura\Filter\TranslatorInterface">
            <type by_reference="false">\Aura\Filter\TranslatorInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="129" package="Aura\Filter">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="120">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="The rule locator." type="\Aura\Filter\RuleLocator" variable="$rule_locator">
            <type by_reference="false">\Aura\Filter\RuleLocator</type>
          </tag>
          <tag line="120" name="param" description="The message translator." type="\Aura\Filter\TranslatorInterface" variable="$translator">
            <type by_reference="false">\Aura\Filter\TranslatorInterface</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$rule_locator</name>
          <default><![CDATA[]]></default>
          <type>Aura\Filter\RuleLocator</type>
        </argument>
        <argument line="131">
          <name>$translator</name>
          <default><![CDATA[]]></default>
          <type>Aura\Filter\TranslatorInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="148" package="Aura\Filter">
        <name>setRule</name>
        <full_name>setRule</full_name>
        <docblock line="137">
          <description><![CDATA[Sets a single rule, encapsulated by a closure, for the rule.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="137" name="param" description="The field for the rule." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="param" description="The message when the rule fails." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="param" description="The closure to use for the rule." type="\Closure" variable="$closure">
            <type by_reference="false">\Closure</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$closure</name>
          <default><![CDATA[]]></default>
          <type>Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="169" package="Aura\Filter">
        <name>addSoftRule</name>
        <full_name>addSoftRule</full_name>
        <docblock line="156">
          <description><![CDATA[Add a rule; keep applying all other rules even if it fails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="\Aura\Filter\$this">
            <type by_reference="false">\Aura\Filter\$this</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="192" package="Aura\Filter">
        <name>addHardRule</name>
        <full_name>addHardRule</full_name>
        <docblock line="179">
          <description><![CDATA[Add a rule; if it fails, stop applying rules on that field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="\Aura\Filter\$this">
            <type by_reference="false">\Aura\Filter\$this</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="215" package="Aura\Filter">
        <name>addStopRule</name>
        <full_name>addStopRule</full_name>
        <docblock line="202">
          <description><![CDATA[Add a rule; if it fails, stop applying rules on all remaining data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="param" description="" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="return" description="" type="\Aura\Filter\$this">
            <type by_reference="false">\Aura\Filter\$this</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="215">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="215">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="232" package="Aura\Filter">
        <name>getRules</name>
        <full_name>getRules</full_name>
        <docblock line="225">
          <description><![CDATA[Returns the collection of rules to be applied.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="244" package="Aura\Filter">
        <name>getRuleLocator</name>
        <full_name>getRuleLocator</full_name>
        <docblock line="237">
          <description><![CDATA[Returns the rule locator.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="237" name="return" description="" type="\Aura\Filter\RuleLocator">
            <type by_reference="false">\Aura\Filter\RuleLocator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="256" package="Aura\Filter">
        <name>getTranslator</name>
        <full_name>getTranslator</full_name>
        <docblock line="249">
          <description><![CDATA[Returns the translator.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="249" name="return" description="" type="\Aura\Filter\TranslatorInterface">
            <type by_reference="false">\Aura\Filter\TranslatorInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter" line="277" package="Aura\Filter">
        <name>addRule</name>
        <full_name>addRule</full_name>
        <docblock line="261">
          <description><![CDATA[Add a rule.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="261" name="param" description="The field name." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="The rule method to use (is, isNot, isBlankOr, etc)." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="The name of the rule to apply." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="Params for the rule." type="string" variable="$params">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="The rule type: soft, hard, stop." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="277">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="277">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="301" package="Aura\Filter">
        <name>useFieldMessage</name>
        <full_name>useFieldMessage</full_name>
        <docblock line="288">
          <description><![CDATA[Use a custom message for a field when it fails any of its rules; this
single message will replace all the various rule messages.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="288" name="param" description="The field name." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="param" description="The message to use when the field fails any of its rules." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="317" package="Aura\Filter">
        <name>values</name>
        <full_name>values</full_name>
        <docblock line="306">
          <description><![CDATA[Applies the rules to the field values of a data object or array; note
that sanitizing filters may modify the values in place.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="306" name="param" description="&amp;$data The data object or array to be filtered." type="object|array" variable="$data">
            <type by_reference="false">object</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="306" name="return" description="True if all rules were applied without error; false if there was at least one error." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Filter" line="394" package="Aura\Filter">
        <name>addMessage</name>
        <full_name>addMessage</full_name>
        <docblock line="383">
          <description><![CDATA[Adds a failure message for a field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="383" name="param" description="The field that failed." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="The rule that the field failed to apss." type="\Aura\Filter\RuleInterface" variable="$rule">
            <type by_reference="false">\Aura\Filter\RuleInterface</type>
          </tag>
          <tag line="383" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$rule</name>
          <default><![CDATA[null]]></default>
          <type>Aura\Filter\RuleInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="431" package="Aura\Filter">
        <name>getMessages</name>
        <full_name>getMessages</full_name>
        <docblock line="421">
          <description><![CDATA[Returns the array of failure messages.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="421" name="param" description="Return messages just for this field; if empty, return messages for all fields." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="421" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$field</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="458" package="Aura\Filter">
        <name>value</name>
        <full_name>value</full_name>
        <docblock line="444">
          <description><![CDATA[Convenience method to apply a rule directly to an individual value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="444" name="param" description="&amp;$value Apply the rule to this value; the rule may modify the value in place." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="444" name="param" description="The rule method to use; e.g., Filter::IS." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="444" name="param" description="The of the rule to apply." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="444" name="return" description="True if the rule was applied successfully, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="458">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="458">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="458">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="RuleInterface.php" hash="8e95bef0bf45c8710b5f84808f8f286f" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <interface namespace="Aura\Filter" line="20" package="Aura\Filter">
      <name>RuleInterface</name>
      <full_name>\Aura\Filter\RuleInterface</full_name>
      <docblock line="13">
        <description><![CDATA[Rule Interface]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Filter"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="33" package="Aura\Filter">
        <name>prep</name>
        <full_name>prep</full_name>
        <docblock line="22">
          <description><![CDATA[Prepare the rule for reuse.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="param" description="The full set of data to be filtered." type="object" variable="$data">
            <type by_reference="false">object</type>
          </tag>
          <tag line="22" name="param" description="The field to be filtered within the data." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="43" package="Aura\Filter">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="35">
          <description><![CDATA[Get the error message; note that this returns the message whether or
not there was an error when validating or sanitizing.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="52" package="Aura\Filter">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="45">
          <description><![CDATA[Gets the params passed into the filter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="62" package="Aura\Filter">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="54">
          <description><![CDATA[Get the value of the field being filtered, or null if the field is
not set in the data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="73" package="Aura\Filter">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="64">
          <description><![CDATA[Set value of field, creating it in the data if needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="The new value of the field." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="82" package="Aura\Filter">
        <name>is</name>
        <full_name>is</full_name>
        <docblock line="75">
          <description><![CDATA[Is the value valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="return" description="True if valid, false if not valid." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="91" package="Aura\Filter">
        <name>isNot</name>
        <full_name>isNot</full_name>
        <docblock line="84">
          <description><![CDATA[Is the value *not* valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="return" description="True if not valid, false if valid." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="100" package="Aura\Filter">
        <name>isBlankOr</name>
        <full_name>isBlankOr</full_name>
        <docblock line="93">
          <description><![CDATA[Is the value blank, or otherwise valid?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="return" description="True if blank or valid, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="109" package="Aura\Filter">
        <name>fix</name>
        <full_name>fix</full_name>
        <docblock line="102">
          <description><![CDATA[Sanitize the value, transforming it as needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="return" description="True if the value was sanitized, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="120" package="Aura\Filter">
        <name>fixBlankOr</name>
        <full_name>fixBlankOr</full_name>
        <docblock line="111">
          <description><![CDATA[If the value is blank, set to null; sanitize if not blank, transforming
it as needed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="return" description="True if the value was set to null or sanitized, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="RuleLocator.php" hash="81d5071a07faf808868c7db544a249e6" package="Aura\Filter">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura Project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Filter"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <class final="false" abstract="false" namespace="Aura\Filter" line="20" package="Aura\Filter">
      <extends/>
      <name>RuleLocator</name>
      <full_name>\Aura\Filter\RuleLocator</full_name>
      <docblock line="13">
        <description><![CDATA[A ServiceLocator implementation for loading and retaining rule objects.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Filter"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="Aura\Filter" package="Default">
        <name>$registry</name>
        <default><![CDATA[]]></default>
        <docblock line="22">
          <description><![CDATA[A registry to retain rule objects.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="Aura\Filter" package="Default">
        <name>$converted</name>
        <default><![CDATA[array()]]></default>
        <docblock line="31">
          <description><![CDATA[Tracks whether or not a registry entry has been converted from a
callable to a helper object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="49" package="Aura\Filter">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="An array of key-value pairs where the key is the rule name and the value is a callable that returns a rule object." type="array" variable="$registry">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$registry</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="63" package="Aura\Filter">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="54">
          <description><![CDATA[Merges a new registry of rules over the old registry; new rules will
override old ones.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="param" description="An array of key-value pairs where the key is the rule name and the value is a callable that returns a rule object." type="array" variable="$registry">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$registry</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="81" package="Aura\Filter">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="70">
          <description><![CDATA[Sets one rule into the registry by name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="param" description="The rule name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="A callable that returns a rule object." type="\Aura\Filter\callable" variable="$spec">
            <type by_reference="false">\Aura\Filter\callable</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$spec</name>
          <default><![CDATA[]]></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="96" package="Aura\Filter">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="87">
          <description><![CDATA[Gets a rule from the registry by name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="param" description="The rule to retrieve." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="A rule object." type="\Aura\Filter\AbstractRule">
            <type by_reference="false">\Aura\Filter\AbstractRule</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Translator.php" hash="13770ec37565e5395ec4b55a213ce525" package="Aura\Cli">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura Project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Cli"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <class final="false" abstract="false" namespace="Aura\Filter" line="20" package="Aura\Cli">
      <extends/>
      <implements>\Aura\Filter\TranslatorInterface</implements>
      <name>Translator</name>
      <full_name>\Aura\Filter\Translator</full_name>
      <docblock line="13">
        <description><![CDATA[Translator to translate the message]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Cli"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="Aura\Filter" package="Default">
        <name>$messages</name>
        <default><![CDATA[array()]]></default>
        <docblock line="22">
          <description><![CDATA[The array of message keys and translations.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="38" package="Aura\Cli">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="param" description="The package internationalization values." type="array" variable="$package">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$package</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="55" package="Aura\Cli">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="43">
          <description><![CDATA[Translate the key with the token values replaced.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="The message key." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="The message placeholder tokens and their replacement values." type="array" variable="$tokens_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="return" description="The translated string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$tokens_values</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="TranslatorInterface.php" hash="1663db666b213573509a5e6320105867" package="Aura\Cli">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura Project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Cli"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <interface namespace="Aura\Filter" line="20" package="Aura\Cli">
      <name>TranslatorInterface</name>
      <full_name>\Aura\Filter\TranslatorInterface</full_name>
      <docblock line="13">
        <description><![CDATA[TranslatorInterface]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Cli"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Filter" line="34" package="Aura\Cli">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="22">
          <description><![CDATA[Translate the key with the token values replaced.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="param" description="The message key." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="param" description="The message placeholder tokens and their replacement values." type="array" variable="$tokens_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="return" description="The translated string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$tokens_values</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <package name="Aura" full_name="Aura">
    <package name="Autoload" full_name="Aura\Autoload"/>
    <package name="Cli" full_name="Aura\Cli"/>
    <package name="Filter" full_name="Aura\Filter"/>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="Aura" full_name="Aura">
    <namespace name="Filter" full_name="Aura\Filter">
      <namespace name="Exception" full_name="Aura\Filter\Exception"/>
      <namespace name="Rule" full_name="Aura\Filter\Rule"/>
    </namespace>
  </namespace>
  <marker count="2">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
